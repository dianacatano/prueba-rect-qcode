{"version":3,"sources":["components/InputComp.js","components/Form.js","components/Banner.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["InputComp","props","className","placeholder","ref","value","onChange","thousandSeparator","decimalSeparator","onValueChange","values","Form","propsF","useForm","register","handleSubmit","useState","formattedValue","stateValor","setStateValor","stateTrm","setStateTrm","stateSelect","setStateSelect","idS","valor","trm","setNewData","class","onSubmit","data","console","log","alert","callback","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","json","dataFetch","localStorage","setItem","htmlFor","e","required","name","id","defaultValue","target","type","onClick","Banner","Table","propsT","dataR","App","dataTrm","setDataTrm","useEffect","getItem","parse","addId","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cfd7888.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nexport const InputComp = (props) => {\r\n    const { className, placeholder, ref, value, onChange } = props;\r\n\r\n    return ( <\r\n        NumberFormat className = { className }\r\n        placeholder = { placeholder }\r\n        ref = { ref }\r\n        thousandSeparator = { \".\" }\r\n        decimalSeparator = { \",\" }\r\n        value = { value }\r\n        onValueChange = {\r\n            (values) => {\r\n                onChange(values);\r\n            }\r\n        }\r\n        />\r\n    );\r\n}","import React, { Fragment, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { InputComp } from './InputComp.js';\r\n\r\n\r\nexport const Form = (propsF) => {\r\n\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const [stateValor, setStateValor] = useState({ formattedValue: \"\" });\r\n    const [stateTrm, setStateTrm] = useState({ formattedValue: \"\" });\r\n    const [stateSelect, setStateSelect] = useState(\"default\");\r\n\r\n    const [newData, setNewData] = useState({\r\n        idS: \"\",\r\n        valor: \"\",\r\n        trm: \"\",\r\n    })\r\n\r\n    const handleInputChange = (event) => {\r\n\r\n        setNewData({\r\n            ...newData,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        console.log('stateSelect:' + stateSelect);\r\n\r\n        if (stateValor.formattedValue === \"\" || stateSelect === \"default\" || stateSelect === \"Seleccione\") {\r\n            alert(\"Los campos marcados con asterisco son obligatorios\");\r\n        } else {\r\n            data.valor = stateValor.formattedValue;\r\n            data.trm = stateTrm.formattedValue;\r\n\r\n            propsF.callback(data);\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(data)\r\n            };\r\n\r\n            fetch('https://httpbin.org/post', requestOptions)\r\n                .then(response => response.json())\r\n                .then(dataFetch => {\r\n                    setNewData(dataFetch.data)\r\n                    localStorage.setItem(\"data\", JSON.stringify(dataFetch.data));\r\n                    console.log(dataFetch);\r\n                    setNewData({\r\n                        idS: \"\",\r\n                        valor: \"\",\r\n                        trm: \"\",\r\n                    });\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    const delInput = () => {\r\n\r\n        setNewData({\r\n            idS: \"\",\r\n            valor: \"\",\r\n            trm: \"\",\r\n        });\r\n\r\n        setStateValor({ formattedValue: \"\" });\r\n        setStateTrm({ formattedValue: \"\" });\r\n        setStateSelect(\"default\");\r\n    }\r\n\r\n    return ( <\r\n        Fragment >\r\n        <\r\n        h1 > Formulario < /h1> <\r\n        p class = \"text-danger\" > * Campo obligatorio < /p> <br/ > <\r\n        form onSubmit = { handleSubmit(onSubmit) } >\r\n\r\n        <\r\n        div className = \"col-md-3\" > <\r\n        label htmlFor = \"valor\" > Valor < span class = \"text-danger\" > * < /span> <\r\n        InputComp className = \"form-control my-2\"\r\n        placeholder = \"Ingrese valor\"\r\n        onChange = {\r\n            (e) => setStateValor(e)\r\n        }\r\n        value = { stateValor.formattedValue }\r\n        ref = {\r\n            register({\r\n                required: { value: true }\r\n            })\r\n        }\r\n        /> < /\r\n        label > < /\r\n        div >\r\n\r\n        <\r\n        div className = \"col-md-3\" > <\r\n        label htmlFor = \"sel\" > Prueba < span class = \"text-danger\" > * < /span> <\r\n        select className = \"form-select my-2\"\r\n        name = \"idS\"\r\n        id = \"idS\"\r\n        defaultValue = \"Seleccione\"\r\n        onChange = {\r\n            (e) => setStateSelect(e.target.value)\r\n        }\r\n        value = { stateSelect }\r\n        ref = {\r\n            register({\r\n                required: { value: true },\r\n            })\r\n        } >\r\n        <\r\n        option > Seleccione < /option> <\r\n        option value = \"1\" > Prueba1 < /option> <\r\n        option value = \"2\" > Prueba2 < /option> <\r\n        option value = \"3\" > Prueba3 < /option><\r\n        option value = \"4\" > Prueba4 < /option> < /\r\n        select > < /label > < /\r\n        div >\r\n\r\n\r\n        <\r\n        div className = \"col-md-3\" >\r\n        <\r\n        label htmlFor = \"valor\" > TRM <\r\n        InputComp className = \"form-control my-2\"\r\n        placeholder = \"Ingrese TRM\"\r\n        onChange = {\r\n            (e) => setStateTrm(e)\r\n        }\r\n        value = { stateTrm.formattedValue }\r\n        ref = {\r\n            register({\r\n                required: false\r\n            })\r\n        }\r\n        /> < /\r\n        label > < /\r\n        div >\r\n\r\n        <\r\n        div className = \"col-md-3\" >\r\n        <\r\n        button className = \"btn btn-primary\"\r\n        type = \"submit\" > Guardar < /button>  <\r\n        button className = \"btn btn-secondary\"\r\n        type = \"button\"\r\n        name = \"delInput\"\r\n        value = \"delete\"\r\n        onClick = { delInput } > Borrar < /button>  < /\r\n        div >\r\n        <\r\n        /form> < /\r\n        Fragment >\r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nexport const Banner = () => ( <\r\n    h1 className = \"bg-primary text-white text-center p-4\" >\r\n    Prueba React < /h1>   \r\n\r\n);","import React from \"react\";\r\n\r\n\r\nexport const Table = propsT => ( <\r\n    tr key = { propsT.dataR.idS } >\r\n    <\r\n    td > { propsT.dataR.idS } < /td> <\r\n    td > { propsT.dataR.valor } < /td> <\r\n    td > {\r\n        (() => {\r\n            switch (propsT.dataR.idS) {\r\n                case \"1\":\r\n                    return \"Prueba1\";\r\n                case \"2\":\r\n                    return \"Prueba2\";\r\n                case \"3\":\r\n                    return \"Prueba3\";\r\n                case \"4\":\r\n                    return \"Prueba4\";\r\n                default:\r\n                    return \"Prueba1\"\r\n            }\r\n        })()\r\n    }\r\n\r\n    <\r\n    /td> <\r\n    td > { propsT.dataR.trm } < /td> < /\r\n    tr >\r\n\r\n);","import React, { useState, useEffect } from 'react';\nimport { Form } from './components/Form.js';\nimport { Banner } from './components/Banner.js';\nimport { Table } from './components/Table.js';\n\nfunction App() {\n\n    const [dataTrm, setDataTrm] = useState([\n        // { idS: \"1\", valor: \"10000\", trm: \"3500\" },\n\n    ]);\n\n\n    useEffect(() => {\n        let data = localStorage.getItem(\"idS\");\n        if (data != null) {\n            setDataTrm(JSON.parse(data))\n\n        } else {\n            setDataTrm([\n                // { idS: \"1\", valor: \"13000\", trm: \"3500\" },\n            ]);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(\"idS\", JSON.stringify(dataTrm));\n    }, [dataTrm]);\n\n    const addNewData = (addId) => {\n        setDataTrm([...dataTrm, {\n            idS: addId.idS,\n            valor: addId.valor,\n            trm: addId.trm\n        }]);\n    };\n\n\n    const tableRows = () =>\n        dataTrm.map(dataR => ( <\n            Table dataR = { dataR }\n            key = { dataR.idS }\n            />\n        ))\n\n    return ( <\n        div className = \"container mt-5\" >\n        <\n        div >\n        <\n        Banner /\n        >\n        <\n        Form callback = { addNewData }\n        / > < /\n        div >\n        <\n        div >\n        <\n        br / >\n        <\n        div >\n        <\n        h4 className = \"bg-primary text-white text-center h-4\" > Listado Prueba < /h4> < /\n        div > <\n        table className = \"table table-striped table-bordered\" >\n        <\n        thead >\n        <\n        tr >\n        <\n        th > ID < /th>  <\n        th > VALOR < /th>  <\n        th > DESCRIPCIÓN < /th> <\n        th > TRM < /th> < /\n        tr > <\n        /thead >   <\n        tbody > { tableRows() } < /tbody> < /\n        table > < /div > < /div >\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}